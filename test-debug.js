// Script de teste completo para autentica√ß√£o JWT
const axios = require('axios');

async function testCompleteAuthFlow() {
  try {
    console.log('üîë === TESTE COMPLETO DE AUTENTICA√á√ÉO JWT ===\n');
    
    // Passo 1: Login
    console.log('1Ô∏è‚É£ Fazendo login...');
    const loginResponse = await axios.post('http://localhost:5000/api/auth/login', {
      email: 'allissonalvesvjt@gmail.com',
      password: '123456'
    });

    if (loginResponse.data.success) {
      console.log('‚úÖ Login bem-sucedido!');
      console.log('ÔøΩ Usu√°rio:', loginResponse.data.data.user.email);
      console.log('üÜî ID do usu√°rio:', loginResponse.data.data.user._id);
      
      const token = loginResponse.data.data.token;
      console.log('üéüÔ∏è Token obtido (primeiros 50 chars):', token.substring(0, 50) + '...\n');
      
      // Passo 2: Testar endpoint com autentica√ß√£o
      console.log('2Ô∏è‚É£ Testando endpoint de estat√≠sticas COM autentica√ß√£o...');
      
      const statsResponse = await axios.get('http://localhost:5000/api/users/detailed-stats', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (statsResponse.data.success) {
        console.log('‚úÖ Estat√≠sticas obtidas com autentica√ß√£o JWT!');
        console.log('üìä Dados b√°sicos:', {
          totalSimulations: statsResponse.data.data.basic.totalSimulations,
          averageScore: statsResponse.data.data.basic.averageScore,
          experience: statsResponse.data.data.basic.experience
        });
        console.log('\nüéØ TESTE DE AUTENTICA√á√ÉO JWT: SUCESSO! ‚úÖ');
      } else {
        console.log('‚ùå Falha ao obter estat√≠sticas:', statsResponse.data.message);
      }
      
    } else {
      console.log('‚ùå Falha no login:', loginResponse.data.message);
    }
    
    // Passo 3: Testar sem token (deve falhar)
    console.log('\n3Ô∏è‚É£ Testando endpoint SEM autentica√ß√£o (deve falhar)...');
    
    try {
      await axios.get('http://localhost:5000/api/users/detailed-stats');
      console.log('‚ùå ERRO: Endpoint permitiu acesso sem token!');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Correto: Endpoint bloqueou acesso sem token (401)');
      } else {
        console.log('‚ùì Erro inesperado:', error.message);
      }
    }

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
    if (error.response) {
      console.error('‚ùå Resposta do servidor:', error.response.data);
      console.error('‚ùå Status:', error.response.status);
    }
  }
}

testCompleteAuthFlow();