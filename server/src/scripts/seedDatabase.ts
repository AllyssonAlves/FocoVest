/**
 * Script para Popular Banco de Dados - FocoVest
 * Executa seeding de quest√µes reais e dados iniciais
 */

import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { QuestaoSeederService } from '../services/QuestaoSeederService';

// Configurar vari√°veis de ambiente
dotenv.config();

async function connectToDatabase(): Promise<void> {
  try {
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/focovest';
    
    await mongoose.connect(mongoUri);
    console.log('‚úÖ Conectado ao MongoDB:', mongoUri);
  } catch (error) {
    console.error('‚ùå Erro ao conectar ao MongoDB:', error);
    process.exit(1);
  }
}

async function runSeeding(): Promise<void> {
  console.log('üå± INICIANDO POPULA√á√ÉO DO BANCO DE DADOS - FOCOVEST');
  console.log('================================================');

  try {
    // 1. Verificar se seeding √© necess√°rio
    const needsSeeding = await QuestaoSeederService.checkIfSeedingNeeded();
    
    if (!needsSeeding) {
      console.log('‚ÑπÔ∏è Banco j√° possui quest√µes suficientes. Use --force para recriar.');
      const forceMode = process.argv.includes('--force');
      
      if (!forceMode) {
        await QuestaoSeederService.getStats();
        return;
      }
      
      console.log('üóëÔ∏è Modo for√ßa ativado - removendo quest√µes existentes...');
      await QuestaoSeederService.clearAllQuestions();
    }

    // 2. Popular com quest√µes reais
    console.log('\nüìö Populando banco com quest√µes reais...');
    await QuestaoSeederService.seedRealQuestions();

    // 3. Exibir estat√≠sticas finais
    console.log('\nüìä Estat√≠sticas finais:');
    await QuestaoSeederService.getStats();

    console.log('\nüéâ SEEDING CONCLU√çDO COM SUCESSO!');
    console.log('üöÄ Banco de dados pronto para uso em produ√ß√£o');

  } catch (error) {
    console.error('‚ùå Erro durante o seeding:', error);
    throw error;
  }
}

async function main(): Promise<void> {
  try {
    await connectToDatabase();
    await runSeeding();
  } catch (error) {
    console.error('üí• Falha cr√≠tica no script de seeding:', error);
    process.exit(1);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Desconectado do MongoDB');
    process.exit(0);
  }
}

// Verificar argumentos da linha de comando
const showHelp = process.argv.includes('--help') || process.argv.includes('-h');

if (showHelp) {
  console.log(`
üå± Script de Seeding - FocoVest Database

USO:
  npm run seed              # Popula apenas se necess√°rio
  npm run seed -- --force   # For√ßa recria√ß√£o completa
  npm run seed -- --help    # Exibe esta ajuda

OP√á√ïES:
  --force    Remove dados existentes e recria tudo
  --help     Exibe informa√ß√µes de uso

EXEMPLOS:
  # Primeira execu√ß√£o (dados iniciais)
  npm run seed
  
  # Recriar banco completo
  npm run seed -- --force
  
  # Verificar estrutura atual
  npm run seed
`);
  process.exit(0);
}

// Executar script
main().catch(console.error);